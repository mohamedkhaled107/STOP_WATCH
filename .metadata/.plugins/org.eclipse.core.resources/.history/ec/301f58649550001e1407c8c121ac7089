/*
 * stopwatch.c
 *
 *  Created on: ١١‏/٠٩‏/٢٠٢٣
 *      Author: dell
 */
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

unsigned char second=0;
unsigned char minute=0;
unsigned char hour=0;
unsigned char sec_flag=0;



void TIMER1_CTC(unsigned short compare_value){
	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
	TCCR1B = (1<<WGM12)|(1<<CS10)|(1<<CS12);
	TIMSK=(1<<OCIE1A);
	TCNT1=0;
	OCR1A=compare_value;
}

ISR(TIMER1_COMPA_vect){
	sec_flag=1;

}

void INT0_falling(void){
	DDRD &= ~(1<<PD2);
	PORTD |=(1<<PD2);
	MCUCR |= (1<<ISC01);
	MCUCR &= ~(1<<ISC00);
	GICR |= (1<<INT0);
}

ISR(INT0_vect){
	second=0;
	minute=0;
	hour=0;
}

void INT1_raising(void){
	DDRD &= ~(1<<PD3);
	MCUCR |= (1<<ISC10)|(1<<ISC11);
	GICR |=(1<<INT1);
}

ISR(INT1_vect){
	TCCR1B &= 0xF8;
}

void INT2_falling(void){
	DDRB &= ~(1<<PB2);
	PORTB |=(1<<PB2);
	MCUCSR |=(1<<ISC2);
	GICR |=(1<<INT2);
}

ISR(INT2_vect){
	TCCR1B |= (1<<CS10) | (1<<CS12);
}

int main(void){
	DDRC |=0x0F;
	PORTC &=0xF0;
	DDRA |=0x3F;
	PORTA &=0xF3;
	SREG=(1<<7);

	TIMER1_CTC(1000);
	INT0_falling();
	INT1_raising();
	INT2_falling();

	while(1){
		if(sec_flag==1){
			second++;
			if(second==60){
				minute++;
				second=0;
			}
			if(minute==60){
				hour++;
				minute=0;
			}
			if(hour==24){
				hour=0;
			}
			sec_flag=0;
		}
		else{
			PORTA = (PORTA & 0xC0) |  (1<<0);
			PORTC = (PORTC & 0xF0) | (second%10);
			_delay_ms(2);
			PORTA = (PORTA & 0xC0) |  (1<<1);
			PORTC = (PORTC & 0xF0) | (second/10);
			_delay_ms(2);
			PORTA = (PORTA & 0xC0) |  (1<<2);
			PORTC = (PORTC & 0xF0) | (minute%10);
			_delay_ms(2);
			PORTA = (PORTA & 0xC0) |  (1<<3);
			PORTC = (PORTC & 0xF0) | (minute/10);
			_delay_ms(2);
			PORTA = (PORTA & 0xC0) |  (1<<4);
			PORTC = (PORTC & 0xF0) | (hour%10);
			_delay_ms(2);
			PORTA = (PORTA & 0xC0) |  (1<<5);
			PORTC = (PORTC & 0xF0) | (hour/10);
			_delay_ms(2);
		}
	}
}





